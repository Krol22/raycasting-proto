{"version":3,"sources":["index.js"],"names":["MAP_ROWS","MAP_COLS","canvas","document","querySelector","ctx","getContext","strokeStyle","mouseX","mouseY","scene","window","addEventListener","e","x","y","map","input","a","b","c","d","Particle","posX","posY","rays","i","Math","PI","push","Ray","save","beginPath","translate","arc","stroke","restore","walls","firstAndLastPairs","forEach","ray","index","closest","record","Infinity","wall","pt","cast","sqrt","pow","moveTo","lineTo","Boundary","x1","y1","x2","y2","lineWidth","angle","dirX","sin","dirY","cos","len","x3","y3","x4","y4","den","t","u","wall2","wall3","wall4","wall5","wall6","wall7","particle","update","clearRect","fillStyle","fillRect","draw","look","width","length","col","mapped","white","loop","requestAnimationFrame"],"mappings":"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","file":"raycasting-proto.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const MAP_ROWS = 24;\nconst MAP_COLS = 24;\n\nconst canvas = document.querySelector('#game-canvas');\nconst ctx = canvas.getContext('2d');\nctx.strokeStyle = 'white'; \n\nlet mouseX = 0;\nlet mouseY = 0;\n\nconst scene = [];\n\nwindow.addEventListener('mousemove', e => {\n  mouseX = e.x;\n  mouseY = e.y;\n});\n\nconst map = (input, a, b, c, d) => {\n  return c + ((d - c) / (b - a)) * (input - a);\n};\n\nclass Particle {\n  constructor() {\n    this.posX = 100;\n    this.posY = 200;\n    this.rays = [];\n    for (let i = -Math.PI; i < Math.PI; i+=Math.PI / 100) {\n      this.rays.push(new Ray(this.posX, this.posY, i));\n    }\n  }\n\n  draw() {\n    ctx.save();\n    ctx.beginPath();\n    ctx.translate(this.posX, this.posY);\n    ctx.arc(0, 0, 2, 0, 2 * Math.PI);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  update() {\n    this.posX = mouseX;\n    this.posY = mouseY;\n    this.rays = [];\n    for (let i = -Math.PI / 6; i < Math.PI / 6; i += Math.PI / 200) {\n      this.rays.push(new Ray(this.posX, this.posY, i));\n    }\n  }\n\n  look(walls) {\n    const scene = [];\n    const firstAndLastPairs = [];\n    this.rays.forEach((ray, index) => {\n      let closest = null;\n      let record = Infinity;\n      walls.forEach(wall => {\n        const pt = ray.cast(wall);\n        if (pt) {\n          const d = Math.sqrt(Math.pow(this.posX - pt.x, 2) + Math.pow(this.posY - pt.y ,2));\n          if (d < record) {\n            record = d;\n            closest = pt;\n          }\n        }\n      });\n\n      if (closest) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(this.posX, this.posY);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(closest.x - this.posX, closest.y - this.posY);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      scene[index] = record;\n    });\n\n    return scene;\n  }\n}\n\nclass Boundary {\n  constructor(x1, y1, x2, y2) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n  }\n  draw() {\n    ctx.save();\n    ctx.beginPath();    \n    ctx.lineWidth = '3';\n    ctx.translate(this.x1, this.y1);\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.x2 - this.x1, this.y2 - this.y1);\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n\nclass Ray {\n  constructor(x, y, angle) {\n    this.posX = x;\n    this.posY = y;\n    this.dirX = Math.sin(angle);\n    this.dirY = Math.cos(angle);\n  }\n\n  draw() {\n    ctx.save();\n    ctx.beginPath();\n    ctx.lineWidth = '1';\n    ctx.translate(this.posX, this.posY);\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.dirX * 50, this.dirY * 50)\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  setDirection(x, y) {\n    this.dirX = x - this.posX;\n    this.dirY = y - this.posY;\n\n    const len = Math.sqrt(Math.pow(this.dirX, 2) + Math.pow(this.dirY, 2));\n    this.dirX = this.dirX / len;\n    this.dirY = this.dirY / len;\n  }\n\n  cast(wall) {\n    this.wall = wall;\n\n    const { x1, x2, y1, y2 } = wall;\n\n    const x3 = this.posX;\n    const y3 = this.posY;\n\n    const x4 = this.posX + this.dirX;\n    const y4 = this.posY + this.dirY;\n\n    const den = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    // ray and wall are parallel\n    if (den === 0) {\n      return;\n    }\n\n    const t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / den;\n    const u = - ((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / den;\n\n    if (t <= 0 || t >= 1 || u <= 0) {\n      return;\n    }\n\n    return {\n      x: x1 + t * (x2 - x1),\n      y: y1 + t * (y2 - y1)\n    };\n  }\n}\n\nconst wall = new Boundary(300, 100, 300, 300);\nconst wall2 = new Boundary(300, 100, 200, 300);\nconst wall3 = new Boundary(100, 200, 300, 200);\nconst wall4 = new Boundary(0, 0, 400, 0);\nconst wall5 = new Boundary(0, 0, 0, 400);\nconst wall6 = new Boundary(400, 0, 400, 400);\nconst wall7 = new Boundary(400, 400, 0, 400);\nconst walls = [\n  wall,\n  wall2,\n  wall3,\n  wall4,\n  wall5,\n  wall6,\n  wall7,\n];\n\nconst particle = new Particle();\n\nconst update = () => {\n  ctx.clearRect(0, 0, 800, 600);\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, 800, 600);\n  walls.forEach(wall => {\n    wall.draw();\n  });\n\n  const scene = particle.look(walls);\n  particle.draw();\n  particle.update();\n\n  const width = 400 / scene.length;\n\n  scene.forEach((col, index) => {\n    ctx.save();\n    ctx.translate(400, 0);\n    const mapped = map(col, 0, 400, 400, 0);\n    const white = map(col, 0, 400, 1, 0);\n    ctx.fillStyle = `rgba(255, 255, 255, ${white})`;\n    ctx.fillRect(index * width, (400 - mapped) / 2, width, mapped); \n\n    ctx.restore();\n  });\n  // ray.draw();\n  // ray.setDirection(mouseX, mouseY);\n// //\n  // let pt = ray.cast(wall);\n  // if (pt) {\n    // ctx.save();\n    // ctx.beginPath();\n    // ctx.translate(pt.x, pt.y);\n    // ctx.arc(0, 0, 10, 0, 2 * Math.PI);\n    // ctx.stroke();\n    // ctx.restore();\n  // }\n};\n\nconst loop = () => {\n  update();\n  window.requestAnimationFrame(loop);\n};\n\nwindow.requestAnimationFrame(loop);\n"]}