{"version":3,"sources":["map.js","vector2d.js","inputManager.js","imageData.helper.js","index.js"],"names":["map","Vector2d","x","y","vector","scalar","Math","sqrt","m","mag","div","angle","inRadians","PI","cos","sin","v0","v1","v2","pow","a","b","c","delta","acos","restartKeyState","key","isPressed","wasPressed","isDown","InputManager","_canvas","keys","mouseState","pos","posInCanvas","prevPos","mouse1","mouse2","init","canvasSelector","document","querySelector","_initKeyBoardEvents","_initMouseEvents","i","update","Object","forEach","keyCode","window","addEventListener","e","boundingRect","getBoundingClientRect","floor","clientX","clientY","button","getImageDataFromImage","image","canvas","createElement","ctx","getContext","width","height","imageSmoothingEnabled","drawImage","getImageData","copyPixel","sourceImageData","sx","sy","ssize","destImageData","dx","dy","dsize","alpha","sourceIndex","destIndex","addPixelToImageData","sourceData","dest","data","mapValue","input","d","objects","type","vMove","uDiv","vDiv","floorCtx","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","mouseMove","playerLookY","movementY","rotSpeed","movementX","oldDirX","playerDir","oldPlaneX","planeX","planeY","pointerlockvalue","event","removeEventListener","requestPointerLock","textureSize","playerPos","rayCastingImageData","floorImageData","celingImageData","ammoImageData","wallImageData","drawFloorInLowerWalls","backWall","ray","stepX","stepY","dir","drawEnd","backWallPerpWallDist","backWallMapPos","mapPos","side","backWallFloorLineHeigth","abs","resolutionHeight","floorStart","floorEnd","fillStyle","fillRect","drawFloorAndCeling","wallX","perpWallDist","drawStart","floorXWall","floorYWall","currentDist","weight","currentFloorX","currentFloorY","floorTexX","floorTexY","resolutionWidth","DDA","rayDir","hitWalls","sideDistX","sideDistY","deltaDistX","deltaDistY","newWall","value","backWallX","backWallY","backWallSide","push","drawObjects","obj","spriteX","spriteY","invDet","transformX","transformY","spriteScreenX","vMoveScreen","texWidth","texHeight","spriteHeight","drawStartY","drawEndY","spriteWidth","drawStartX","drawEndX","stripe","texX","texY","drawn","cameraX","reverse","hitWall","lineHeight","textureX","textureY","movementSpeed","playerMovement","loop","clearRect","save","ImageData","putImageData","restore","requestAnimationFrame","offset","loadAsset","src","Promise","resolve","asset","Image","onload","then"],"mappings":"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,GAAG,EAAI;ACI7BqC,ADHErC,ECGFqC,ADHErC,GCGC,ADHE,CCGDyC,ADHExC,SAAJ,GAAgB,KAAhB,ICGF,GAA4B,KAA5B;AACAoC,ADHErC,ECGFqC,ADHErC,EDJiBzB,CEOhB,ADHE,CCGDmE,ADHExC,SCGN,CAAcgC,ADHZ,GAAiB,ECGnB,EAAqB,CAArB,ADHE,ECGsB,CAAxB;AACA,ADHElC,EAAAA,GAAG,CAACG,GCGCkC,GAAG,ADHR,CCGSM,EDHI,KAAb,KCGK,CAAiB,CAAjB,EAAoB,CAApB,EAAuBT,KAAK,CAACK,KAA7B,EAAoCL,KAAK,CAACM,MAA1C,CAAP;AACD,ADHA,CCNM,ADEP;ADDE,oBAAYhE,CAAZ,EAAeC,CAAf,EAAkB;ACOb,ADPa,ICOP2B,YAAY,GAAG;AACxBC,EAAAA,OAAO,EAAE,IADe;ACGrB,ADDHC,ADRA,ECQAA,ECCSsC,EDDL,EAAE,CDRDpE,CCMmB,ADNxB,GESkB,AFTTA,CAAT,EESqB,SAAZoE,SAAY,CAACC,eAAD,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,KAA1B,EAAiCC,aAAjC,EAAgDC,EAAhD,EAAoDC,EAApD,EAAwDC,KAAxD,EAA+DC,KAA/D,EAAyE;AAChG,ACNF,AFKI9C,ADRA,ECQAA,EELEqD,EDMEN,GFTC7E,CAAL,EGGU,AFKA,CDRDA,CCQG,ADRZ,CGGa,EDME,GAAG,CAAEG,GCNlBgF,CDMsB,CAAC/B,KAAL,CAAWkB,ACNlB,CAACc,CDMM,IAAiBb,ACNxB,EAAQtD,CAAR,EDMM,ACNKC,CAAX,EDMiCf,ACNnBgB,CAAd,EAAiBkE,CDMoB,ACNrC,CDMsCjC,CCNf,IDMU,CAAWiB,EAAX,CAA5B,IAA8C,CAAlE;AACA,ACNA,AFKMtC,ADRL,ICQKA,ECCA+C,CDDG,EELF3D,AFKI,CELH,GAAI,AFKGrB,CELFuF,CDME,ACND,GDMI,ACNDlE,CDMGhB,ACNR,IDMY,CAACiD,ACNFlC,CAAC,GAAGD,CDMP,ACNR,CDMmByD,ACNpB,AFKA,CAAa,CCCJ,ADDT,EELuBU,AFKP,CAAhB,CCC0BT,ADFvB,GEJyB,EDMpB,CCNuB1D,CAA/B,CDMmCd,ACN9C,IDMkD,CAACiD,KAAL,CAAWqB,EAAX,CAA5B,IAA8C,CAAhE;AAEAM,ACPD,AFKO/C,CEPR,CDSE+C,EDFM/C,WAAW,EAAE,ICEA,ADFIlC,CCEHsE,eAAD,CDFA,CCEkBS,ADFL,CAAb,EAAgB,CAAhB,CAFL,MCIK,EAA+BL,aAA/B,EAA8CM,SAA9C,EAAyDF,KAAzD,CAAnB;AACD,ACND,AFIQ3C,CCHD,GDGCA,OAAO,EAAE,IAAInC,iBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAHD;AAIRoC,IAAAA,MAAM,EAAE,KAJA;AAKRC,IAAAA,MAAM,EAAE,YDVVlC,QAAQ;ACKE,ADJZ,GCCwB,QDDnBF,CAAL,IAAUE,MAAM,CAACF,CAAjB;AEWJ,ADAIqC,ADVA,ECUAA,IAVwB,GCUnB2C,EFVA/E,CAAL,IAAUC,MCUJoC,ADVU,CAACrC,CAAjB,IEUJ,CAA6BgF,ODVD,EAUF,CCA1B,EAAyCH,WAAzC,EAAsDI,IAAtD,EAA4DH,SAA5D,EAAuEF,KAAvE,EAA8E;AAC5E,ADAM,ADVL,MEUE,CAACI,EDAOpD,OAAL,CCAQ,CAACsD,CDAM5C,GCAjB,CAAgBuC,IDAS,CAACtC,MCAC,GAAG,CAA9B,CAAJ,EAAsC,ADAjB,CAAuBF,cAAvB,CAAf;ACCJ;AACD,ADAK,SAAKG,mBAAL;AEJR,IAAM8C,OAAO,GAAG,CACd,SHHIrF,QAAQ;AEQZgF,ACJElD,AFGI,ADNJ,EEOFkD,ACJElD,GAAG,CDID,CAACmD,ACJE,EFGIzC,ECCX,ACJW3C,AHHJC,CEOG+E,AFPR,IAAU7E,KEOZ,CFPkB,CAACF,CAAjB,CEOqBiF,ADDjB,GEHC,CAAa,EAAb,EAAiB,EDIS,ACJ1B,CDI2BE,ACLlC,IDKuB,CAAgBL,WAAhB,CAAvB;AACAI,ACJEM,AHHA,EEOFN,ACJEM,IDIE,ACJE,CDIDL,CCJG,GDIR,AFPOlF,CEOG8E,AFPR,EGCF,EHDY7E,KEOO,CFPD,CAACD,CEOG,AFPpB,CEOF,IAA2BgF,UAAU,CAACE,IAAX,CAAgBL,WAAW,GAAG,CAA9B,CAA3B;AACAI,ACJEO,AFGI,ADNL,EEODP,ACJEO,IDIE,CAACN,ACJE,EAAE,AFGC,CEHA,CDIV,CAAUJ,CCPV,AFMcpC,CAAC,GAAG,CAAZ,EAAeA,CCCF,ADDG,GCCA,ADDG,CCCzB,EDDM,ECCqBsC,ADDGtC,CAAC,EAAzB,EAA6B,KCCE,CAACwC,IAAX,CAAgBL,WAAW,GAAG,CAA9B,CAA3B;AACAI,ACJEQ,AFGQ,ECCVR,ACJEQ,IDIE,ACJE,CDIDP,CCJG,CAJR,EDQA,ADDerD,CCCLiD,GDDA,CAAUpC,CAAV,ICCS,ADDM,GCCH,CAAtB,IAA2BsC,UAAU,CAACE,IAAX,CAAgBL,WAAW,GAAG,CAA9B,CAA3B;ACHEa,AFGYlE,EEHZkE,IAAI,EAAE,AFGMlE,SAAS,EAAE,KADA;ACGzB,ACVA,AFScC,CEVA,EAQd,GDGImD,EDDUnD,GCCd,EAAW,KDDa,EAAE,IDPtBvB,CCKqB,ODLb;AESV+E,ACHAlD,AFEYL,ADPZ,EGKAK,EDGAkD,CCHG,EAAE,CDGD,ADDQvD,CCCPwD,ECHIpF,AHLJC,CAAL,CEQA,CAAU+E,ADDQ,EAAE,ADPV5E,MAAV,CEQmB,GAAG,CAAtB,CCHK,CAAa,EDGS0E,ACHtB,EAAiB,EAAjB,CDGL,ACJF;ADKE,ACHAW,AFFuB,ADHvB,EGKAA,IAAI,CFFI,CEEF,GHLDvF,CAAL,EGGF,EHHYE,MAAV;AESD,ACHCsF,AFEK,ADPN,EGKCA,KAAK,EAAE,GAHT;ADOD,ACHGC,AFEC,EEFDA,CFrBwB,GEqBpB,EAAE,CAJR;AAKEC,AFEA/C,EEFA+C,AFEA/C,IEFI,EAAE,AFtBkB,oBAwBf;AEPX,AFOW,CEfG,CAAhB,sBHQMzC,QAAQ;AGUd,AHTI,IGSE0D,GAAG,GAAGtB,CHTHvC,CAAL,IAAUG,EGSM,CAACqC,GHTjB,UGSQ,CAAuB,cAAvB,EAAuCsB,UAAvC,CAAkD,IAAlD,CAAZ;AACA,AFHQjB,ADNJ,IGSE+C,AFHE/C,MAAM,CAACf,ADNN7B,CGSK,AHTV,GGSasC,AFHT,CAAY,ADNNpC,KCMW2B,CDNrB,CGSqB,CAACU,CFHlB,EAAuBM,OAAvB,CAA+B,EEGtB,CAAuB,OFHDC,OAAO,CEG7B,CFHiC,CEGOe,UA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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["export const map = [\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,2,2,2,2,2,0,0,0,0,3,0,3,0,3,0,0,0,1],\n  [1,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,2,0,0,0,2,0,0,0,0,3,0,0,0,3,0,0,0,1],\n  [1,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,2,2,0,2,2,0,0,0,0,3,0,3,0,3,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,4,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,4,0,0,0,0,5,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,4,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,4,0,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n];\n","export default class Vector2d {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(vector) {\n    this.x += vector.x;\n    this.y += vector.y;\n  }\n\n  static addVectors(v0, v1) {\n    return new Vector2d(v0.x + v1.x, v0.y + v1.y);\n  }\n\n  sub(vector) {\n    this.x -= vector.x;\n    this.y -= vector.y;\n  }\n\n  mul(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n  }\n\n  div(scalar) {\n    this.x /= scalar;\n    this.y /= scalar;\n  }\n\n  mag() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    const m = this.mag();\n    this.div(m);\n  }\n\n  rotateAroundVector(vector, angle, inRadians) {\n    if (inRadians) {\n        angle = angle * (180 / Math.PI);\n    }\n\n    let { x, y } = this;\n\n    x -= vector.x;\n    y -= vector.y\n\n    this.x = x * Math.cos(angle) - y * Math.sin(angle);\n    this.y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    this.x += vector.x;\n    this.y += vector.y;\n  }\n\n  static magnitude(v1, v2) {\n    return Math.sqrt(\n      Math.pow(v1.x - v2.x, 2) + Math.pow(v1.y - v2.y, 2)\n    );\n  }\n\n  static findAngle(v0, v1, v2) {\n    let a = Math.pow(v1.x - v0.x, 2) + Math.pow(v1.y - v0.y, 2);\n    let b = Math.pow(v1.x - v2.x, 2) + Math.pow(v1.y - v2.y, 2);\n    let c = Math.pow(v2.x - v0.x, 2) + Math.pow(v2.y - v0.y, 2);\n\n    let delta = (a + b - c) / Math.sqrt(4 * a * b);\n    let angle = Math.acos(delta);\n\n    if (delta < -1) {\n      return Math.PI;\n    } else if (delta > 1) {\n      return 0;\n    }\n\n    if (v0.y > v1.y) {\n      angle = 2 * Math.PI - angle;\n    }\n\n    return angle;\n  }\n}\n","import Vector2d from './vector2d';\n\nconst restartKeyState = key => {\n    key.isPressed = false;\n    key.wasPressed = false;\n    key.isDown = false;\n};\n\nexport const InputManager = {\n    _canvas: null,\n    keys: {},\n    mouseState: {\n        pos: new Vector2d(0, 0),\n        posInCanvas: new Vector2d(0, 0),\n        prevPos: new Vector2d(0, 0),\n        mouse1: false,\n        mouse2: false\n    },\n    init (canvasSelector) {\n        this._canvas = document.querySelector(canvasSelector);\n\n        this._initKeyBoardEvents();\n        this._initMouseEvents();\n\n        for(let i = 0; i < 255; i++) {\n            this.keys[i] = {\n                isPressed: false,\n                wasPressed: false,\n                isDown: false,\n            }\n        }\n    },\n    update() {\n        Object.keys(this.keys).forEach(keyCode => {\n            if (this.keys[keyCode].wasPressed) {\n                this.keys[keyCode].isDown = true;\n                this.keys[keyCode].isPressed = false;\n            }\n\n            if (!this.keys[keyCode].isDown) {\n                this.keys[keyCode].wasPressed = this.keys[keyCode].isPressed;\n            }\n        });\n    },\n    _initKeyBoardEvents () {\n        window.addEventListener('keydown', (e) => {\n            if (!this.keys[e.keyCode]) {\n                this.keys[e.keyCode] = {\n                    isPressed: true,\n                    wasPressed: false,\n                    isDown: false\n                };\n\n                return;\n            } else {\n                this.keys[e.keyCode].isDown = true;\n            }\n\n            if (!this.keys[e.keyCode].isDown) {\n                this.keys[e.keyCode].isPressed = true;\n            }\n        });\n\n        window.addEventListener('keyup', (e) => {\n            restartKeyState(this.keys[e.keyCode]);\n        });\n    },\n    _initMouseEvents () {\n        window.addEventListener('mousemove', (e) => {\n            const boundingRect = this._canvas.getBoundingClientRect();\n\n            const pos = new Vector2d(Math.floor(e.clientX), Math.floor(e.clientY));\n            const posInCanvas = new Vector2d(pos.x - Math.floor(boundingRect.x), pos.y - Math.floor(boundingRect.y));\n\n            this.mouseState.prevPos = this.mouseState.pos;\n\n            this.mouseState.pos = pos;\n            this.mouseState.posInCanvas = posInCanvas;\n        });\n\n        // #TODO: finish after getting normal mouse\n        window.addEventListener('mousedown', (e) => {\n            if (e.button === 0) {\n                this.mouseState.mouse1 = true;\n            }\n\n            if (e.button === 2) {\n                this.mouseState.mouse2 = true;\n            }\n        });\n\n        window.addEventListener('mouseup', (e) => {\n            if (e.button === 0) {\n                this.mouseState.mouse1 = false;\n            }\n\n            if (e.button === 2) {\n                this.mouseState.mouse2 = false;\n            }\n        });\n    }\n}\n","export const getImageDataFromImage = image => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = image.width;\n  canvas.height = image.height;\n\n  ctx.imageSmoothingEnabled = false;\n  ctx.drawImage(image, 0, 0);\n  return ctx.getImageData(0, 0, image.width, image.height);\n}\n\nexport const copyPixel = (sourceImageData, sx, sy, ssize, destImageData, dx, dy, dsize, alpha) => {\n  const sourceIndex = ((Math.floor(sy) * ssize) + Math.floor(sx)) * 4;\n  const destIndex = ((Math.floor(dy) * dsize) + Math.floor(dx)) * 4;\n\n  addPixelToImageData(sourceImageData, sourceIndex, destImageData, destIndex, alpha);\n}\n\nfunction addPixelToImageData(sourceData, sourceIndex, dest, destIndex, alpha) {\n  if(!sourceData.data[sourceIndex + 3]) {\n    return;\n  }\n\n  dest.data[destIndex] = sourceData.data[sourceIndex];\n  dest.data[destIndex + 1] = sourceData.data[sourceIndex + 1];\n  dest.data[destIndex + 2] = sourceData.data[sourceIndex + 2];\n  dest.data[destIndex + 3] = sourceData.data[sourceIndex + 3];\n\n  if (alpha) {\n    dest.data[destIndex + 3] = alpha;\n    return;\n  }\n}\n","import { map } from './map';\nimport Vector2d from './vector2d';\nimport { InputManager } from './inputManager';\n\nimport { getImageDataFromImage, copyPixel } from './imageData.helper';\n\nconst mapValue = (input, a, b, c, d) => {\n  return c + ((d - c) / (b - a)) * (input - a);\n};\n\n/*\n\n  Todo: sorting, \n  Figure out how values vMove, uDiv, vDiv corelates with each other,\n\n*/\n\nconst objects = [\n  {\n    pos: new Vector2d(11, 18),\n    type: 'AMMO',\n    vMove: -160,\n    uDiv: 4,\n    vDiv: 4\n  },\n  {\n    pos: new Vector2d(11, 20),\n    type: 'AMMO',\n    vMove: 160,\n    uDiv: 4,\n    vDiv: 4\n  },\n];\n\n\nconst ctx = document.querySelector('#game-canvas').getContext('2d');\nconst floorCtx = document.querySelector('#floor-canvas').getContext('2d');\nctx.webkitImageSmoothingEnabled = false;\nctx.mozImageSmoothingEnabled = false;\nctx.imageSmoothingEnabled = false;\n\nconst canvas = document.querySelector('#game-canvas');\n\nconst mouseMove = e => {\n  playerLookY -= e.movementY;\n\n  const rotSpeed = -e.movementX / 1000;\n\n  const oldDirX = playerDir.x;\n  playerDir.x = playerDir.x * Math.cos(rotSpeed) - playerDir.y * Math.sin(rotSpeed);\n  playerDir.y = oldDirX * Math.sin(rotSpeed) + playerDir.y * Math.cos(rotSpeed);\n\n  const oldPlaneX = planeX;\n  planeX = planeX * Math.cos(rotSpeed) - planeY * Math.sin(rotSpeed);\n  planeY = oldPlaneX * Math.sin(rotSpeed) + planeY * Math.cos(rotSpeed);\n}\n\nlet pointerlockvalue = false;\ndocument.addEventListener('pointerlockchange', event => {\n  pointerlockvalue = !pointerlockvalue;\n\n  if (pointerlockvalue) {\n    canvas.addEventListener('mousemove', mouseMove);\n  } else {\n    canvas.removeEventListener('mousemove', mouseMove);\n  }\n});\n\ncanvas.addEventListener('mousedown', () => {\n  canvas.requestPointerLock();\n})\n\nInputManager.init('#game-canvas');\n\nconst textureSize = 16;\n\nlet playerPos = new Vector2d(12, 18);\nlet playerDir = new Vector2d(-1, 0);\nlet playerLookY = 100;\n\nlet planeX = 0.0;\nlet planeY = 0.66;\n\nlet rayCastingImageData;\nlet floorImageData;\nlet celingImageData;\nlet ammoImageData;\nlet wallImageData;\n\nfunction drawFloorInLowerWalls(backWall, playerPos, ray, stepX, stepY, x) {\n  const { dir, drawEnd } = ray;\n\n  let backWallPerpWallDist;\n  let backWallMapPos = backWall.mapPos;\n  if (backWall.side === 0) {\n    backWallPerpWallDist = (backWallMapPos.x - playerPos.x + (1 - stepX) / 2) / dir.x;\n  } else {\n    backWallPerpWallDist = (backWallMapPos.y - playerPos.y + (1 - stepY) / 2) / dir.y;\n  }\n\n  let backWallFloorLineHeigth = Math.floor(Math.abs(resolutionHeight / backWallPerpWallDist));\n  let floorStart = resolutionHeight / 2 + backWallFloorLineHeigth / 2;\n  let floorEnd = floorStart - backWallFloorLineHeigth / 3;\n  ctx.fillStyle = 'blue';\n  ctx.fillRect(x, floorEnd, 1, drawEnd - floorEnd);\n}\n\nfunction drawFloorAndCeling(mapPos, side, wallX, ray, x) {\n  const { perpWallDist, drawStart, dir } = ray;\n  let floorXWall; \n  let floorYWall;\n\n  if(side === 0 && dir.x > 0) {\n    floorXWall = mapPos.x;\n    floorYWall = mapPos.y + wallX;\n  } else if(side === 0 && dir.x < 0) {\n    floorXWall = mapPos.x + 1.0;\n    floorYWall = mapPos.y + wallX;\n  } else if(side === 1 && dir.y > 0) {\n    floorXWall = mapPos.x + wallX;\n    floorYWall = mapPos.y;\n  } else {\n    floorXWall = mapPos.x + wallX;\n    floorYWall = mapPos.y + 1.0;\n  }\n\n  for (let y = Math.floor(drawStart); y < resolutionHeight + Math.abs(playerLookY); y++) {\n    const currentDist = resolutionHeight / (2 * y - resolutionHeight);\n    const weight = currentDist / perpWallDist;\n\n    const currentFloorX = (weight * floorXWall + (1 - weight) * playerPos.x);\n    const currentFloorY = (weight * floorYWall + (1 - weight) * playerPos.y);\n\n    const floorTexX = Math.floor(currentFloorX * textureSize) % textureSize;\n    const floorTexY = Math.floor(currentFloorY * textureSize) % textureSize;\n\n    const alpha = Math.floor(mapValue(currentDist, 0, 7, 255, 0));\n\n    copyPixel(floorImageData, floorTexX, floorTexY, textureSize, rayCastingImageData, x, y + playerLookY, resolutionWidth, alpha);\n    copyPixel(celingImageData, floorTexX, floorTexY, textureSize, rayCastingImageData, x, resolutionHeight - y + playerLookY, resolutionWidth, alpha);\n  }\n}\n\nfunction DDA(rayDir) {\n  const hitWalls = [];\n  const mapPos = new Vector2d(Math.floor(playerPos.x), Math.floor(playerPos.y));\n\n  let side;\n  let sideDistX, sideDistY;\n  let stepX, stepY;\n\n  const deltaDistX = Math.sqrt(1 + (rayDir.y * rayDir.y) / (rayDir.x * rayDir.x));\n  const deltaDistY = Math.sqrt(1 + (rayDir.x * rayDir.x) / (rayDir.y * rayDir.y));\n  \n  if (rayDir.x < 0) {\n    stepX = -1;\n    sideDistX = (playerPos.x - mapPos.x) * deltaDistX;\n  } else {\n    stepX = 1;\n    sideDistX = (mapPos.x + 1 - playerPos.x) * deltaDistX;\n  }\n  if (rayDir.y < 0) {\n    stepY = -1;\n    sideDistY = (playerPos.y - mapPos.y) * deltaDistY;\n  } else {\n    stepY = 1;\n    sideDistY = (mapPos.y + 1 - playerPos.y) * deltaDistY;\n  } \n\n  while (true) {\n    if (sideDistX < sideDistY) {\n      sideDistX += deltaDistX;\n      mapPos.x += stepX;\n      mapPos.x = Math.floor(mapPos.x);\n      side = 0;\n    } else {\n      sideDistY += deltaDistY;\n      mapPos.y += stepY;\n      mapPos.y = Math.floor(mapPos.y);\n      side = 1;\n    }\n\n    if (map[mapPos.x][mapPos.y] > 0) {\n      let newWall = {\n        mapPos: new Vector2d(mapPos.x, mapPos.y),\n        value: map[mapPos.x][mapPos.y],\n        side,\n      };\n\n      let backWallX = mapPos.x;\n      let backWallY = mapPos.y;\n      let backWallSide;\n\n      if (sideDistX < sideDistY) {\n        backWallX += stepX;\n        backWallX = Math.floor(backWallX);\n        backWallSide = 0;\n      } else {\n        backWallY += stepY;\n        backWallY = Math.floor(backWallY);\n        backWallSide = 1;\n      }\n\n      let backWall = {\n        mapPos: new Vector2d(backWallX, backWallY),\n        side: backWallSide,\n        value: 3,\n      };\n\n      newWall.backWall = backWall;\n      hitWalls.push(newWall);\n\n      if (map[mapPos.x][mapPos.y] !== 3) {\n        break;\n      }\n    }\n  }\n\n  return [hitWalls, stepX, stepY];\n}\n\nconst resolutionWidth = 800;\nconst resolutionHeight = 400;\n\nconst drawObjects = () => {\n  objects.forEach((obj) => {\n    const { uDiv = 1, vDiv = 1, vMove = 0 } = obj;\n\n    const spriteX = obj.pos.x - playerPos.x;\n    const spriteY = obj.pos.y - playerPos.y;\n\n    if (spriteX === 0 && spriteY === 0) {\n      return;\n    }\n\n    const invDet = 1 / (planeX * playerDir.y - playerDir.x * planeY);\n    const transformX = invDet * (playerDir.y * spriteX - playerDir.x * spriteY);\n    const transformY = invDet * (-planeY * spriteX + planeX * spriteY);\n\n    const spriteScreenX = Math.floor((resolutionWidth / 2) * (1 + transformX / transformY));\n\n    const vMoveScreen = Math.floor(vMove / transformY) + playerLookY;\n\n    const texWidth = 16;\n    const texHeight = 16;\n\n    const spriteHeight = Math.abs(Math.floor(resolutionHeight / transformY)) / vDiv;\n\n    let drawStartY = -spriteHeight / 2 + resolutionHeight / 2 + vMoveScreen;\n    if (drawStartY < 0 - playerLookY) drawStartY = 0;\n    let drawEndY = spriteHeight / 2 + resolutionHeight / 2 + vMoveScreen;\n    if (drawEndY >= resolutionHeight - playerLookY) drawEndY = resolutionHeight - 1;\n\n    const spriteWidth = Math.abs(Math.floor(resolutionHeight / transformY)) / uDiv;\n    let drawStartX = -spriteWidth / 2 + spriteScreenX;\n    if (drawStartX < 0) drawStartX = 0;\n    let drawEndX = spriteWidth / 2 + spriteScreenX;\n    if (drawEndX >= resolutionWidth) drawEndX = resolutionHeight - 1;\n\n    for (let stripe = Math.floor(drawStartX); stripe < drawEndX; stripe++) {\n      const texX = Math.floor(256 * (stripe - (-spriteWidth / 2 + spriteScreenX)) * texWidth / spriteWidth) / 256;\n      if (transformY > 0) {\n        for(let y = Math.floor(drawStartY); y < drawEndY; y++) {\n          const d = (y - vMoveScreen) * 256 - resolutionHeight * 128 + spriteHeight * 128;\n          const texY = ((d * texHeight) / spriteHeight) / 256;\n\n          copyPixel(ammoImageData, texX, texY, textureSize, rayCastingImageData, stripe, y, resolutionWidth);\n        }\n      }\n    }\n  });\n};\n\nconst update = () => {\n  objects.forEach(obj => obj.drawn = false);\n  for (let x = 0; x < resolutionWidth; x++) {\n    const cameraX = 2 * x / resolutionWidth - 1; \n    const rayDir = new Vector2d(playerDir.x + planeX * cameraX, playerDir.y + planeY * cameraX);\n\n    const [hitWalls, stepX, stepY] = DDA(rayDir);\n\n    // Calculate distance projected on camera\n    hitWalls.reverse().forEach(hitWall => {\n      const ray = {};\n      ray.dir = rayDir;\n\n      let { mapPos, side, value, backWall } = hitWall;\n\n      if (side === 0) {\n        ray.perpWallDist = (mapPos.x - playerPos.x + (1 - stepX) / 2) / ray.dir.x;\n      } else {\n        ray.perpWallDist = (mapPos.y - playerPos.y + (1 - stepY) / 2) / ray.dir.y;\n      }\n\n      // Calculate col height;\n      let lineHeight = Math.floor(Math.abs(resolutionHeight / ray.perpWallDist));\n\n      // calculate lowest and highest pixel of wall;\n      ray.drawStart = (resolutionHeight + lineHeight) / 2;\n      ray.drawEnd = ray.drawStart - lineHeight / (value === 3 ? value : 1);\n\n      let wallX;\n      if (side === 0) {\n        wallX = playerPos.y + ray.perpWallDist * ray.dir.y;\n      } else {\n        wallX = playerPos.x + ray.perpWallDist * ray.dir.x;\n      }\n\n      wallX -= Math.floor(wallX);\n\n      drawFloorAndCeling(mapPos, side, wallX, ray, x);\n\n      const textureX = Math.floor((wallX - Math.floor(wallX)) * textureSize);\n\n      for (let i = 0; i < Math.floor(lineHeight / (value === 3 ? value : 1)); i++) {\n        if (Math.floor(ray.drawStart - i + playerLookY) > resolutionHeight) {\n          continue;\n        }\n\n        const textureY = Math.floor(mapValue(i, 0, lineHeight, 0, textureSize));\n\n        copyPixel(wallImageData, textureX, textureY, textureSize, rayCastingImageData, x, ray.drawStart - i + playerLookY, resolutionWidth);\n      }\n      if (value === 3 && backWall) {\n        // drawFloorInLowerWalls(backWall, playerPos, ray, stepX, stepY, x);\n      }\n\n    });\n\n  }\n\n  drawObjects(playerPos, playerDir);\n};\n\nconst rotSpeed = 0.07;\nconst movementSpeed = 0.1;\nconst playerMovement = () => {\n  if (InputManager.keys[87] && InputManager.keys[87].isDown) {\n    playerPos.y += playerDir.y * movementSpeed;\n    playerPos.x += playerDir.x * movementSpeed;\n  }\n\n  if (InputManager.keys[83] && InputManager.keys[83].isDown) {\n    playerPos.y -= playerDir.y * movementSpeed;\n    playerPos.x -= playerDir.x * movementSpeed;\n  }\n\n  if (InputManager.keys[68] && InputManager.keys[68].isDown) {\n    // playerPos.y -= playerDir.y * movementSpeed;\n    // playerPos.x += playerDir.x * movementSpeed;\n  }\n\n  if (InputManager.keys[65] && InputManager.keys[65].isDown) {\n    // playerPos.y += playerDir.y * movementSpeed;\n    // playerPos.x -= playerDir.x * movementSpeed;\n  }\n\n  // if (InputManager.keys[68] && InputManager.keys[68].isDown) {\n    // const oldDirX = playerDir.x;\n    // playerDir.x = playerDir.x * Math.cos(-rotSpeed) - playerDir.y * Math.sin(-rotSpeed);\n    // playerDir.y = oldDirX * Math.sin(-rotSpeed) + playerDir.y * Math.cos(-rotSpeed);\n//\n    // const oldPlaneX = planeX;\n    // planeX = planeX * Math.cos(-rotSpeed) - planeY * Math.sin(-rotSpeed);\n    // planeY = oldPlaneX * Math.sin(-rotSpeed) + planeY * Math.cos(-rotSpeed);\n  // }\n//\n  // if (InputManager.keys[65] && InputManager.keys[65].isDown) {\n    // const oldDirX = playerDir.x;\n    // playerDir.x = playerDir.x * Math.cos(rotSpeed) - playerDir.y * Math.sin(rotSpeed);\n    // playerDir.y = oldDirX * Math.sin(rotSpeed) + playerDir.y * Math.cos(rotSpeed);\n//\n    // const oldPlaneX = planeX;\n    // planeX = planeX * Math.cos(rotSpeed) - planeY * Math.sin(rotSpeed);\n    // planeY = oldPlaneX * Math.sin(rotSpeed) + planeY * Math.cos(rotSpeed);\n  // }\n//\n  // playerLookY += Math.floor((InputManager.mouseState.prevPos.y - InputManager.mouseState.pos.y));\n};\n\nconst loop = () => {\n  ctx.clearRect(0, 0, 800, 400);\n  floorCtx.clearRect(0, 0, 800, 400);\n  ctx.save();\n  rayCastingImageData = new ImageData(resolutionWidth, resolutionHeight);\n  update();\n  floorCtx.putImageData(rayCastingImageData, 0, 0);\n  ctx.restore();\n  window.requestAnimationFrame(loop);\n\n  playerMovement();\n};\n\nwindow.addEventListener('keydown', e => {\n  if (e.key === 'q') {\n    offset += 10;\n  } \n\n  if (e.key === 'z') {\n    offset -= 10;\n  }\n});\n\nconst loadAsset = (src) => {\n  return new Promise(resolve => {\n    const asset = new Image();\n    asset.src = src;\n    asset.onload = () => {\n      resolve(asset);\n    }\n  });\n};\n\nloadAsset('Wall.png').then((asset) => {\n  wallImageData = getImageDataFromImage(asset);\n  return loadAsset('Floor.png')\n}).then(asset => {\n  floorImageData = getImageDataFromImage(asset);\n  return loadAsset('Celling.png')\n}).then(asset => {\n  celingImageData = getImageDataFromImage(asset);\n  return loadAsset('Ammo.png')\n}).then(asset => {\n  ammoImageData = getImageDataFromImage(asset);\n  window.requestAnimationFrame(loop);\n});\n"]}